{
  "xs:schema": {
    "@elementFormDefault": "qualified",
    "@xmlns:xs": "http://www.w3.org/2001/XMLSchema",
    "xs:include": {
      "@schemaLocation": "MetadataCommon.xsd"
    },
    "xs:element": [
      {
        "@name": "CollectionMetaDataFile",
        "@type": "CollectionMetaDataFile"
      },
      {
        "@name": "Collection",
        "@type": "Collection"
      },
      {
        "@name": "CollectionPartialAdd",
        "@type": "CollectionPartialAdd"
      },
      {
        "@name": "CollectionPartialDelete",
        "@type": "CollectionPartialDelete"
      },
      {
        "@name": "CollectionDelete",
        "@type": "CollectionRef"
      },
      {
        "@name": "CollectionRef",
        "@type": "CollectionRef"
      }
    ],
    "xs:complexType": [
      {
        "@name": "CollectionMetaDataFile",
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "DataCenter",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "Name of data center where this metadata\n          file was originated."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@name": "Collections",
              "@type": "ListOfCollections",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "Collections to be inserted or\n          replaced."
              }
            },
            {
              "@name": "CollectionPartialAdds",
              "@type": "ListOfCollectionPartialAdds",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "Partial metadata adds to be applied to\n          collections."
              }
            },
            {
              "@name": "CollectionPartialDeletes",
              "@type": "ListOfCollectionPartialDeletes",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "Partial metadata deletes to be applied\n          to collections."
              }
            },
            {
              "@name": "CollectionDeletes",
              "@type": "ListOfCollectionDeletes",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "Collections that should be immediately\n          deleted. To set a future delete time, use a partial\n          metadata update."
              }
            },
            {
              "@name": "CollectionVerifications",
              "@type": "ListOfCollections",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "Collections to be verified. Each\n          collection supplied will be matched with the current\n          instance in ECHO in order to find any metadata\n          mismatches. The supplied collections will then be\n          inserted (if a collection is missing from ECHO) or\n          replaced (resolving any metadata\n          mismatches)."
              }
            },
            {
              "@name": "CollectionInventory",
              "@type": "CollectionInventory",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "All of the collections that should\n          exist for a provider in ECHO. ECHO will determine any\n          collections that are missing from ECHO or should not\n          exist in ECHO based upon the given\n          collections."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfCollectionDeletes",
        "xs:annotation": {
          "xs:documentation": "A list of collection\n      deletes."
        },
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "CollectionDelete",
            "@type": "CollectionRef"
          }
        }
      },
      {
        "@name": "ListOfCollections",
        "xs:annotation": {
          "xs:documentation": "A list of collections."
        },
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Collection",
            "@type": "Collection"
          }
        }
      },
      {
        "@name": "CollectionInventory",
        "xs:annotation": {
          "xs:documentation": "The collection inventory for a provider. An\n      empty CollectionReferences element represents an inventory\n      with no collections."
        },
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "1",
            "@maxOccurs": "1",
            "@name": "CollectionReferences",
            "@type": "ListOfCollectionRefs",
            "xs:annotation": {
              "xs:documentation": "The references to collections that are\n          expected to exist for the provider in\n          ECHO"
            }
          }
        }
      },
      {
        "@name": "Collection",
        "xs:annotation": {
          "xs:documentation": {
            "p": [
              "This entity contains brief description of collections\n        including the dataset identifier, short and long names, and\n        the version of the collection. The dataset identifier is\n        the primary identifier used by ECHO to identify a\n        collection. This also provides further description of the\n        collection to include media, revision date, usage, and\n        processing and archive centers etc.In this entity, the\n        aggregation information such as total number of granules\n        contained by this collection etc. are stored as well.",
              "Adopted from Release B Science Data Processing Segment\n        (SDPS) for the ECS Project. Refer to 311-CD-008-001 May 15,\n        1996.Additional fields are added to host the collection\n        aggregation information, price, book keeping information,\n        and various default setting etc. Collection's dataset ID\n        attribute is added to hold an alternative unique identifier\n        of the collection per provider."
            ]
          }
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "ShortName",
              "@type": "CollectionShortName",
              "xs:annotation": {
                "xs:documentation": "This name will identify the short name\n          associated with the collection. This is the official\n          reference name used in identifying the contents of the\n          data collection. All characters must be in upper case.\n          The short name and version id combination must be unique\n          for a provider."
              }
            },
            {
              "@name": "VersionId",
              "xs:annotation": {
                "xs:documentation": "Version identifier of the data\n          collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "InsertTime",
              "@type": "xs:dateTime",
              "xs:annotation": {
                "xs:documentation": "The insert date/time the collection\n          entered data provider's database. This date is provided\n          by the data provider."
              }
            },
            {
              "@name": "LastUpdate",
              "@type": "xs:dateTime",
              "xs:annotation": {
                "xs:documentation": "The most recent update occurred on the\n          data provider's database. This date is provided by the\n          data provider."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "DeleteTime",
              "@type": "xs:dateTime",
              "xs:annotation": {
                "xs:documentation": "The date the collection is or is\n          planned to be deleted from the data provider's database.\n          This date is provided by the data provider. If this date\n          is in the past, the collection will be deleted during the\n          next automated cleanup."
              }
            },
            {
              "@name": "LongName",
              "xs:annotation": {
                "xs:documentation": "This attribute will identify the long\n          name associated with the collection. This is the\n          reference name used in describing the scientific contents\n          of the data collection. The long name and version id must\n          be unique for a provider."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "1024"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "DataSetId",
              "xs:annotation": {
                "xs:documentation": "Specifies a unique name for the\n          collection. This is considered the primary identifier for\n          a collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "1030"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "Description",
              "xs:annotation": {
                "xs:documentation": "This attribute identifies the major\n          emphasis of the content of the\n          collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "12000"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "DOI",
              "@type": "DoiType",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "This element stores the DOI (Digital Object Identifier) that identifies the collection.  Note: The values should start with the directory indicator which in ESDIS' case is 10.  If the DOI was registered through ESDIS, the beginning of the string should be 10.5067. The DOI URL is not stored here; it should be stored as an OnlineResource. The DOI organization that is responsible for creating the DOI is described in the Authority element. For ESDIS records the value of https://doi.org/ should be used. While this element is not required, NASA metadata providers are strongly encouraged to include DOI and DOI Authority for their collections. For those that want to specify that a DOI is not applicable for their record use the second option."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "CollectionDataType",
              "xs:annotation": {
                "xs:documentation": "An element to identify\n          non-science-quality products such as NRT data. If a\n          collection does not contain this field, it will be\n          assumed to be of science-quality."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:enumeration": [
                    {
                      "@value": "SCIENCE_QUALITY",
                      "xs:annotation": {
                        "xs:documentation": "All EOS and non-EOS data and\n                data products that are archived\n                by EOSDIS."
                      }
                    },
                    {
                      "@value": "NEAR_REAL_TIME",
                      "xs:annotation": {
                        "xs:documentation": "Data from the source that are\n                available for use within a time that is short in\n                comparison to important time scales in the phenomena\n                being studied. This data is not science quality and\n                is not retained by EOSDIS once the SCIENCE_QUALITY\n                product is archived"
                      }
                    },
                    {
                      "@value": "OTHER",
                      "xs:annotation": {
                        "xs:documentation": "Any EOS and non-EOS data and data\n                products, that are not SCIENCE_QUALITY and do not\n                fall under NEAR_REAL_TIME holdings."
                      }
                    }
                  ]
                }
              }
            },
            {
              "@name": "Orderable",
              "@type": "xs:boolean",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "The indication of whether this\n          collection is orderable."
              }
            },
            {
              "@name": "Visible",
              "@type": "xs:boolean",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": {
                  "p": [
                    "Indication of whether the collection is visible or\n            not. Visibility is a basic access control mechanism\n            that bypasses all ACL rules. If a collection is not\n            visible, only users with the owning provider role will\n            be able to see the item. All other users will not see\n            the item no matter what ACL permissions are in\n            place.",
                    "If group based permissions are needed, use the\n            restriction flag field instead of visibility. Normally\n            visibility is used when an item is first ingested.\n            Making the item not visible allows the provider time to\n            install any ACL rules or order options required before\n            users will see the item. Visibility is more commonly\n            set at the collection level than the granule level. If\n            a collection is not visible, none of the granules in\n            the collection will be visible."
                  ]
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "RevisionDate",
              "@type": "xs:dateTime",
              "xs:annotation": {
                "xs:documentation": "Represents the date and possibly the\n          time that this directory entry was created or the latest\n          date and time of its modification or\n          update."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "SuggestedUsage",
              "xs:annotation": {
                "xs:documentation": "This attribute describes how this\n          collection or granule may be best used to support earth\n          science/global change research."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "4000"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ProcessingCenter",
              "xs:annotation": {
                "xs:documentation": "Center where collection was or is being\n          processed."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "240"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ProcessingLevelId",
              "xs:annotation": {
                "xs:documentation": "The processing level class contains the\n          level identifier and level description of the\n          collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ProcessingLevelDescription",
              "xs:annotation": {
                "xs:documentation": "Description of Processing\n          Level."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ArchiveCenter",
              "xs:annotation": {
                "xs:documentation": "Center where collection is\n          archived."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "240"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "VersionDescription",
              "xs:annotation": {
                "xs:documentation": "A brief description of the differences\n          between this collection version and another collection\n          version."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "4000"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "CitationForExternalPublication",
              "xs:annotation": {
                "xs:documentation": "The recommended reference to be used\n          when referring to this collection in publications. Its\n          format is free text, but should include: Originator (the\n          name of an organization or individual that developed the\n          data set, where Editor(s)' names are followed by (ed.)\n          and Compiler(s)' names are followed by (comp.));\n          Publication date (the date of publication or release of\n          the data set); Title (the name by which document can be\n          referenced)."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "4000"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "CollectionState",
              "xs:annotation": {
                "xs:documentation": "This attribute describes the state of\n          the collection, whether it is planned but not yet\n          existent, partially complete due to continual additions\n          from remotely sensed data/processing/reprocessing, or is\n          considered a complete product/dataset."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "MaintenanceAndUpdateFrequency",
              "xs:annotation": {
                "xs:documentation": "The frequency with which changes and\n          additions are made to the collection after the initial\n          dataset begins to be\n          collected/processed."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "RestrictionFlag",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "A numerical value indicates the type of\n          restriction that applies on this\n          collection."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "RestrictionComment",
              "xs:annotation": {
                "xs:documentation": "Restrictions and legal prerequisites\n          for accessing the collection. These include any access\n          constraints applied to assure the protection of privacy\n          or intellectual property, and any special restrictions or\n          limitations on obtaining the collection. These\n          restrictions differ from Use Restrictions in that they\n          only apply to access."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "1024"
                  }
                }
              }
            },
            {
              "@name": "UseConstraints",
              "@type": "UseConstraintsType",
              "@minOccurs": "0"
            },
            {
              "@minOccurs": "0",
              "@name": "Price",
              "@type": "DollarAmount",
              "xs:annotation": {
                "xs:documentation": "The price for ordering the\n          collection."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "DataFormat",
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "SpatialKeywords",
              "@type": "ListOfKeywords",
              "xs:annotation": {
                "xs:documentation": "This attribute specifies a word or\n          phrase which serves to summarize the spatial regions\n          covered by the collection. It may be repeated if several\n          regions are covered. This often occurs when a collection\n          is described as covering some large region, and several\n          smaller sub regions within that\n          region."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "TemporalKeywords",
              "@type": "ListOfKeywords",
              "xs:annotation": {
                "xs:documentation": "This attribute specifies a word or\n          phrase which serves to summarize the temporal\n          characteristics referenced in the\n          collection."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "Temporal",
              "@type": "Temporal"
            },
            {
              "@minOccurs": "0",
              "@name": "Contacts",
              "@type": "ListOfContacts"
            },
            {
              "@minOccurs": "0",
              "@name": "ScienceKeywords",
              "@type": "ListOfScienceKeywords"
            },
            {
              "@minOccurs": "0",
              "@name": "Platforms",
              "@type": "ListOfPlatforms"
            },
            {
              "@minOccurs": "0",
              "@name": "AdditionalAttributes",
              "@type": "ListOfAdditionalAttributes"
            },
            {
              "@minOccurs": "0",
              "@name": "CSDTDescriptions",
              "@type": "ListOfCSDTDescriptions"
            },
            {
              "@minOccurs": "0",
              "@name": "CollectionAssociations",
              "@type": "ListOfCollectionAssociations"
            },
            {
              "@minOccurs": "0",
              "@name": "Campaigns",
              "@type": "ListOfCampaigns"
            },
            {
              "@minOccurs": "0",
              "@name": "AlgorithmPackages",
              "@type": "ListOfAlgorithmPackages"
            },
            {
              "@minOccurs": "0",
              "@name": "TwoDCoordinateSystems",
              "@type": "ListOfTwoDCoordinateSystems",
              "xs:annotation": {
                "xs:documentation": "This entity defines the two dimensional\n          coordinate systems for the collection. The two\n          dimensional coordinate system information is an\n          alternative way to express spatial coverage. Granules in\n          the collection that specify two dimensional coordinate\n          data must conform to one of the systems defined by the\n          collection."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "SpatialInfo",
              "@type": "SpatialInfo"
            },
            {
              "@minOccurs": "0",
              "@name": "OnlineAccessURLs",
              "@type": "ListOfOnlineAccessURLs"
            },
            {
              "@minOccurs": "0",
              "@name": "OnlineResources",
              "@type": "ListOfOnlineResources"
            },
            {
              "@minOccurs": "0",
              "@name": "AssociatedDIFs",
              "@type": "ListOfAssociatedDIFs"
            },
            {
              "@minOccurs": "0",
              "@name": "Spatial",
              "@type": "Spatial"
            },
            {
              "@minOccurs": "0",
              "@name": "MetadataStandardName",
              "@type": "MetadataStandardName"
            },
            {
              "@minOccurs": "0",
              "@name": "MetadataStandardVersion",
              "@type": "MetadataStandardVersion"
            },
            {
              "@minOccurs": "0",
              "@name": "ProductFlag",
              "@type": "ProductFlag"
            }
          ],
          "xs:choice": {
            "xs:element": [
              {
                "@name": "AssociatedBrowseImages",
                "@type": "ListOfProviderBrowseIds",
                "@minOccurs": "0",
                "xs:annotation": {
                  "xs:documentation": "The list of browse images associated\n            with this collection."
                }
              },
              {
                "@name": "AssociatedBrowseImageUrls",
                "@type": "ListOfProviderBrowseUrls",
                "@minOccurs": "0",
                "xs:annotation": {
                  "xs:documentation": "The list of browse image urls\n            associated with this collection."
                }
              }
            ]
          }
        }
      },
      {
        "@name": "UseConstraintsType",
        "xs:sequence": {
          "xs:element": {
            "@name": "Description",
            "@minOccurs": "0",
            "xs:annotation": {
              "xs:documentation": "This sub-element either contains a license summary or free-text description that details the permitted use or limitation of this collection."
            },
            "xs:simpleType": {
              "xs:restriction": {
                "@base": "xs:string",
                "xs:minLength": {
                  "@value": "1"
                },
                "xs:maxLength": {
                  "@value": "4000"
                }
              }
            }
          },
          "xs:choice": {
            "@minOccurs": "0",
            "xs:element": [
              {
                "@name": "LicenseUrl",
                "@type": "OnlineResource"
              },
              {
                "@name": "LicenseText",
                "xs:annotation": {
                  "xs:documentation": "This element holds the actual license text. If this element is used the LicenseUrl element cannot be used."
                },
                "xs:simpleType": {
                  "xs:restriction": {
                    "@base": "xs:string",
                    "xs:minLength": {
                      "@value": "1"
                    },
                    "xs:maxLength": {
                      "@value": "20000"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      {
        "@name": "ListOfAlgorithmPackages",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "AlgorithmPackage",
            "@type": "AlgorithmPackage"
          }
        }
      },
      {
        "@name": "Characteristic",
        "xs:annotation": {
          "xs:documentation": "This entity is used to define\n      characteristics."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Name",
              "xs:annotation": {
                "xs:documentation": "The name of the characteristic\n          attribute."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "Description",
              "xs:annotation": {
                "xs:documentation": "Description of the Characteristic\n          attribute."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@name": "DataType",
              "xs:annotation": {
                "xs:documentation": "The datatype of the\n          Characteristic/attribute."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@name": "Unit",
              "xs:annotation": {
                "xs:documentation": "Units associated with the\n          Characteristic attribute value."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "20"
                  }
                }
              }
            },
            {
              "@name": "Value",
              "xs:annotation": {
                "xs:documentation": "The value of the Characteristic\n          attribute."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfCharacteristics",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Characteristic",
            "@type": "Characteristic"
          }
        }
      },
      {
        "@name": "AlgorithmPackage",
        "xs:annotation": {
          "xs:documentation": "This entity provides the common\n      characteristics of the algorithms used in product generation.\n      These characteristics include the algorithm package name,\n      date, version, maturity code and generating system\n      characteristics for the package."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Name",
              "xs:annotation": {
                "xs:documentation": "This attribute is the name given to the\n          complete delivered package submitted for algorithm\n          integration and test."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "Version",
              "xs:annotation": {
                "xs:documentation": "This attribute specifies the version of\n          the full package being delivered."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "20"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "Description",
              "xs:annotation": {
                "xs:documentation": "The description of the algorithm\n          package."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfCampaigns",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Campaign",
            "@type": "Campaign"
          }
        }
      },
      {
        "@name": "Campaign",
        "xs:annotation": {
          "xs:documentation": "This entity contains attributes describing\n      the scientific endeavor(s) to which the collection is\n      associated. Scientific endeavors include campaigns, projects,\n      interdisciplinary science investigations, missions, field\n      experiments, etc."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "ShortName",
              "xs:annotation": {
                "xs:documentation": "The unique identifier by which a\n          campaign/project/experiment is known. The campain/project\n          is the scientific endeavor associated with the\n          acquisition of the collection. Collections may be\n          associated with multiple campaigns."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "40"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "LongName",
              "xs:annotation": {
                "xs:documentation": "The expanded name of the\n          campaign/experiment (e.g. Global climate observing\n          system)."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "1024"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "StartDate",
              "@type": "xs:dateTime",
              "xs:annotation": {
                "xs:documentation": "The starting date of the\n          campaign."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "EndDate",
              "@type": "xs:dateTime",
              "xs:annotation": {
                "xs:documentation": "The ending data of the\n          campaign."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfCollectionAssociations",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "CollectionAssociation",
            "@type": "CollectionAssociation"
          }
        }
      },
      {
        "@name": "CollectionAssociation",
        "xs:annotation": {
          "xs:documentation": "This entity is used to describe collections\n      associated with the instance of a collection; i.e., the name\n      and other details of input collections, collections\n      associated (in science data terms) with the instance and/or\n      collections dependent on the collection in some\n      way."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "ShortName",
              "@type": "CollectionShortName",
              "xs:annotation": {
                "xs:documentation": "The short name of an input collection\n          and/or a dependent collection that is somehow associated\n          with this collection."
              }
            },
            {
              "@name": "VersionId",
              "xs:annotation": {
                "xs:documentation": "The version of an input collection\n          and/or a dependent collection that is somehow associated\n          with this collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "CollectionType",
              "xs:annotation": {
                "xs:documentation": "The type of the association whether an\n          input type, or dependent type etc."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "CollectionUse",
              "xs:annotation": {
                "xs:documentation": "Explanation of how the associated\n          collection is used for this\n          collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "4000"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfCSDTDescriptions",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "CSDTDescription",
            "@type": "CSDTDescription"
          }
        }
      },
      {
        "@name": "CSDTDescription",
        "xs:annotation": {
          "xs:documentation": "This entity stores the description of the\n      data organization of the collection (i.e. a generalized\n      collection Description in terms of internal structure). There\n      are many possible structures. All should be describable by\n      one of the PrimaryCSDTs (fixed domain), but the specific\n      implementation has an unbounded domain indicating the range\n      at the lower structured level. While many CSDTs may exist in\n      a granule, only the primary or dominant CSDT is described\n      (e.g. PrimaryCSDT = swath, Implementation = HDF-EOS). The\n      indirect reference is used for collection specific data\n      organization labels. A comment field is provided for further\n      explanation."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "PrimaryCSDT",
              "xs:annotation": {
                "xs:documentation": "The name of the CSDT type of data\n          organization (data type and sub type). Computer Science\n          Data Types are the physical storage types required to\n          support Earth Science Data Types(ESDTs), the logical\n          objects seen in pyramid views."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "Implementation",
              "xs:annotation": {
                "xs:documentation": "The name of the implemented form of the\n          CSDT (standard formats, industry standards etc.),\n          including lowest level object\n          description."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "1024"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "CSDTComments",
              "xs:annotation": {
                "xs:documentation": "A free text field for the user to add\n          comments clarifying the data\n          structure."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "IndirectReference",
              "xs:annotation": {
                "xs:documentation": "Name of object by which data are\n          organized. Name is the ESDT related or other local name\n          other than the formal CSDT reference. i.e. 2.5 degree\n          bins for CERES, 5 degree bins for CERES, and source\n          packets for level 0."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "1024"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfAdditionalAttributes",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "AdditionalAttribute",
            "@type": "AdditionalAttribute"
          }
        }
      },
      {
        "@name": "AdditionalAttribute",
        "xs:annotation": {
          "xs:documentation": "This entity stores the product specific\n      attributes (i.e. attributes used to describe the unique\n      characteristics of the collection which extend beyond those\n      defined in this model)."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Name",
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "DataType",
              "@type": "DataType",
              "xs:annotation": {
                "xs:documentation": "Data type of parameter\n          value"
              }
            },
            {
              "@name": "Description",
              "xs:annotation": {
                "xs:documentation": "This attribute provides a description\n          for the additional_attribute_name."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "MeasurementResolution",
              "xs:annotation": {
                "xs:documentation": "This attribute will be used to identify\n          the smallest unit increment to which the parameter value\n          is measured."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ParameterRangeBegin",
              "xs:annotation": {
                "xs:documentation": "This attribute provides the minimum\n          value of parameter over whole\n          collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ParameterRangeEnd",
              "xs:annotation": {
                "xs:documentation": "This attribute provides the maximum\n          value of parameter over whole\n          collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ParameterUnitsOfMeasure",
              "xs:annotation": {
                "xs:documentation": "The standard unit of measurement for a\n          not-core attribute. AVHRR: unit of geophysical\n          parameter-units of geophysical\n          parameter."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ParameterValueAccuracy",
              "xs:annotation": {
                "xs:documentation": "An estimate of the accuracy of the\n          assignment of attribute value. AVHRR: Measurement error\n          or precision-measurement error or precision of a data\n          product parameter. This can be specified in percent or\n          the unit with which the parameter is\n          measured."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "ValueAccuracyExplanation",
              "xs:annotation": {
                "xs:documentation": "This defines the method used for\n          determining the parameter value accuracy that is given\n          for this non core attribute."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "Value",
              "xs:annotation": {
                "xs:documentation": "This attribute contains the value of\n          the product specific attribute (additional attribute) for\n          all granules across a given collection"
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "500"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfKeywords",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Keyword",
            "xs:simpleType": {
              "xs:restriction": {
                "@base": "xs:string",
                "xs:maxLength": {
                  "@value": "80"
                },
                "xs:minLength": {
                  "@value": "1"
                }
              }
            }
          }
        }
      },
      {
        "@name": "ListOfPlatforms",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Platform",
            "@type": "Platform"
          }
        }
      },
      {
        "@name": "Platform",
        "xs:annotation": {
          "xs:documentation": "This entity describes the relevant\n      platforms associated with the acquisition of the collection\n      or granule. For example, Platforms may include (but are not\n      limited to): ADEOS-II, AEM-2, AM-1, Aqua, Aura, BALLOONS,\n      BUOYS, C-130, DEM, DMSP-F1, ERS-1, GOES-10, LANDSAT-1,\n      METEOSAT-2, NIMBUS-2, NOAA-6, TERRA, TRMM,\n      etc."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "ShortName",
              "xs:annotation": {
                "xs:documentation": "The unique platform name. (e.g.\n          GOES-8)."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "LongName",
              "xs:annotation": {
                "xs:documentation": "The expanded or long name of the\n          platform associated with an\n          instrument."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "1024"
                  }
                }
              }
            },
            {
              "@name": "Type",
              "xs:annotation": {
                "xs:documentation": "The most relevant platform\n          type."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@name": "Characteristics",
              "@type": "ListOfCharacteristics",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "The characteristics of platform\n          specific attributes. The characteristic names must be\n          unique on this platform; however the names do not have to\n          be unique across platforms."
              }
            },
            {
              "@name": "Instruments",
              "@type": "ListOfInstruments",
              "@minOccurs": "0"
            }
          ]
        }
      },
      {
        "@name": "ListOfInstruments",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Instrument",
            "@type": "Instrument"
          }
        }
      },
      {
        "@name": "Instrument",
        "xs:annotation": {
          "xs:documentation": "This entity registers the device used to\n      measure or record data, including direct human observation.\n      In cases where instruments have a single sensor or the\n      instrument and sensor are used synonymously (e.g. AVHRR) the\n      both Instrument and Sensor should be recorded. The Sensor\n      information is represented by some other\n      entities."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "ShortName",
              "xs:annotation": {
                "xs:documentation": "The unique identifier of an\n          instrument."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "LongName",
              "xs:annotation": {
                "xs:documentation": "The expanded name of the primary\n          sensory instrument. (e.g. Advanced Spaceborne Thermal\n          Emission and Reflective Radiometer, Clouds and the\n          Earth's Radiant Energy System, Human\n          Observation)."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "1024"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "Technique",
              "xs:annotation": {
                "xs:documentation": "The expanded name of the primary\n          sensory instrument. (e.g. Advanced Spaceborne Thermal\n          Emission and Reflective Radiometer, Clouds and the\n          Earth's Radiant Energy System, Human\n          Observation)."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "NumberOfSensors",
              "@type": "xs:int",
              "xs:annotation": {
                "xs:documentation": "Number of sensors used on the\n          instrument when acquire the granule\n          data."
              }
            },
            {
              "@name": "Characteristics",
              "@type": "ListOfCharacteristics",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "The characteristics of this instrument\n          expressed as custom attributes. The characteristic names\n          must be unique on this instrument; however the names do\n          not have to be unique across\n          instruments."
              }
            },
            {
              "@name": "Sensors",
              "@type": "ListOfSensors",
              "@minOccurs": "0"
            },
            {
              "@name": "OperationModes",
              "@type": "ListOfOperationModes",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "The operation mode applied on the\n          instrument when acquire the granule\n          data."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfSensors",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Sensor",
            "@type": "Sensor"
          }
        }
      },
      {
        "@name": "Sensor",
        "xs:annotation": {
          "xs:documentation": "This entity holds the referential\n      information for collection source/sensor configuration\n      including sensor parameters setting such as technique\n      etc."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "ShortName",
              "xs:annotation": {
                "xs:documentation": "Short name of the\n          sensor."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "LongName",
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "1024"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "Technique",
              "xs:annotation": {
                "xs:documentation": "Technique applied for this sensor in\n          the configuration."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@name": "Characteristics",
              "@type": "ListOfCharacteristics",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "The characteristics of this sensor\n          expressed as custom attributes. The characteristic names\n          must be unique on this sensor; however the names do not\n          have to be unique across sensors."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfScienceKeywords",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "ScienceKeyword",
            "@type": "ScienceKeyword"
          }
        }
      },
      {
        "@name": "ScienceKeyword",
        "xs:annotation": {
          "xs:documentation": "This entity holds cross reference between\n      collections and science keywords."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "CategoryKeyword",
              "xs:annotation": {
                "xs:documentation": "Keyword used to describe the general\n          category of the collection. A collection can conceivably\n          cover several categories."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "500"
                  }
                }
              }
            },
            {
              "@name": "TopicKeyword",
              "xs:annotation": {
                "xs:documentation": "Keyword used to describe the general\n          topic area of the collection. A collection can\n          conceivably cover several topics."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "500"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "TermKeyword",
              "xs:annotation": {
                "xs:documentation": "Keyword used to describe the science\n          parameter area of the collection. A collection can\n          conceivably cover many such\n          parameters."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "500"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "VariableLevel1Keyword",
              "@type": "VariableLevel1Keyword"
            },
            {
              "@minOccurs": "0",
              "@name": "DetailedVariableKeyword",
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "VariableLevel1Keyword",
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Value",
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "500"
                  }
                }
              }
            },
            {
              "@name": "VariableLevel2Keyword",
              "@type": "VariableLevel2Keyword",
              "@minOccurs": "0"
            }
          ]
        }
      },
      {
        "@name": "VariableLevel2Keyword",
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Value",
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "500"
                  }
                }
              }
            },
            {
              "@name": "VariableLevel3Keyword",
              "@minOccurs": "0",
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "500"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfAssociatedDIFs",
        "xs:annotation": {
          "xs:documentation": "The collection's DIF (Directory Interchange\n      Format) identifier(s)."
        },
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "DIF",
            "@type": "EntryId"
          }
        }
      },
      {
        "@name": "EntryId",
        "xs:annotation": {
          "xs:documentation": "Unique identifier of the DIF (Directory\n      Interchange Format)."
        },
        "xs:sequence": {
          "xs:element": {
            "@name": "EntryId",
            "@type": "CommonEntryId"
          }
        }
      },
      {
        "@name": "Temporal",
        "xs:annotation": {
          "xs:documentation": "This entity contains records, which\n      describe the basis of the time system used for a specific\n      collection."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "TimeType",
              "xs:annotation": {
                "xs:documentation": "This attribute provides the time system\n          which the values found in temporal subclasses\n          represent."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "DateType",
              "xs:annotation": {
                "xs:documentation": "This attribute specifies the type of\n          date represented by the value in the date attributes of\n          the temporal subclasses."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "TemporalRangeType",
              "xs:annotation": {
                "xs:documentation": "This attribute tells the system and\n          ultimately the end user how temporal coverage is\n          specified for the collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "PrecisionOfSeconds",
              "@type": "xs:int",
              "xs:annotation": {
                "xs:documentation": "The precision (position in number of\n          places to right of decimal point) of seconds used in\n          measurement."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "EndsAtPresentFlag",
              "@type": "xs:boolean",
              "xs:annotation": {
                "xs:documentation": "This attribute will denote that a data\n          collection which covers, temporally, a discontinuous\n          range, currently ends at the present date. This way, the\n          granules, which comprise the data collection, that are\n          continuously being added to inventory need not update the\n          data collection metadata for each one."
              }
            }
          ],
          "xs:choice": {
            "xs:element": [
              {
                "@maxOccurs": "unbounded",
                "@name": "RangeDateTime",
                "@type": "RangeDateTime"
              },
              {
                "@maxOccurs": "unbounded",
                "@name": "SingleDateTime",
                "@type": "xs:dateTime"
              },
              {
                "@maxOccurs": "unbounded",
                "@name": "PeriodicDateTime",
                "@type": "PeriodicDateTime"
              }
            ]
          }
        }
      },
      {
        "@name": "PeriodicDateTime",
        "xs:annotation": {
          "xs:documentation": "This entity contains the name of the\n      temporal period in addition to the date, time, duration unit,\n      and value, and cycle duration unit and value. Used at the\n      collection level to describe a collection having granules,\n      which cover a regularly occurring period."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Name",
              "xs:annotation": {
                "xs:documentation": "The name given to the recurring time\n          period. e.g. 'spring - north hemi.'"
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "30"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "StartDate",
              "@type": "xs:dateTime",
              "xs:annotation": {
                "xs:documentation": "This attribute provides the date (day\n          and time) of the first occurrence of this regularly\n          occurring period which is relevant to the collection,\n          granule, or event coverage."
              }
            },
            {
              "@name": "EndDate",
              "@type": "xs:dateTime"
            },
            {
              "@name": "DurationUnit",
              "@type": "DurationUnit",
              "xs:annotation": {
                "xs:documentation": "The unit specification for the period\n          duration."
              }
            },
            {
              "@name": "DurationValue",
              "@type": "xs:int",
              "xs:annotation": {
                "xs:documentation": "The number of PeriodDurationUnits in\n          the RegularPeriodic period. e.g. the RegularPeriodic\n          event 'Spring-North Hemi' might have a\n          PeriodDurationUnit='MONTH' PeriodDurationValue='3'\n          PeriodCycleDurationUnit='YEAR'\n          PeriodCycleDurationValue='1' indicating that Spring-North\n          Hemi lasts for 3 months and has a cycle duration of 1\n          year. The unit for the attribute is the value of the\n          attribute PeriodDurationValue."
              }
            },
            {
              "@name": "PeriodCycleDurationUnit",
              "@type": "DurationUnit",
              "xs:annotation": {
                "xs:documentation": "The unit specification of the period\n          cycle duration."
              }
            },
            {
              "@name": "PeriodCycleDurationValue",
              "@type": "xs:int"
            }
          ]
        }
      },
      {
        "@name": "ListOfTwoDCoordinateSystems",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "TwoDCoordinateSystem",
            "@type": "TwoDCoordinateSystem"
          }
        }
      },
      {
        "@name": "TwoDCoordinateSystem",
        "xs:annotation": {
          "xs:documentation": "Defines a named two dimensional coordinate\n      system for the collection."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "TwoDCoordinateSystemName",
              "xs:annotation": {
                "xs:documentation": "Defines the name of the Two Dimensional\n          coordinate System. Must be unique within a\n          collection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@name": "Coordinate1",
              "@type": "TwoDCoordinate",
              "xs:annotation": {
                "xs:documentation": "Defines the horizontal\n          coordinate."
              }
            },
            {
              "@name": "Coordinate2",
              "@type": "TwoDCoordinate",
              "xs:annotation": {
                "xs:documentation": "Defines the vertical\n          coordinate."
              }
            }
          ]
        }
      },
      {
        "@name": "TwoDCoordinate",
        "xs:annotation": {
          "xs:documentation": "Defines the minimum and maximum value for\n      one dimension of a two dimensional\n      coordinate."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "MinimumValue",
              "@minOccurs": "0",
              "@type": "xs:decimal"
            },
            {
              "@name": "MaximumValue",
              "@minOccurs": "0",
              "@type": "xs:decimal"
            }
          ]
        }
      },
      {
        "@name": "Spatial",
        "xs:annotation": {
          "xs:documentation": "This entity contains collection's spatial\n      coverage information."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "SpatialCoverageType",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "This attribute denotes whether the\n          collection's spatial coverage requires horizontal,\n          vertical, or both in the spatial domain and coordinate\n          system definitions."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "HorizontalSpatialDomain",
              "@type": "HorizontalSpatialDomain"
            },
            {
              "@minOccurs": "0",
              "@maxOccurs": "unbounded",
              "@name": "VerticalSpatialDomain",
              "@type": "VerticalSpatialDomain"
            },
            {
              "@minOccurs": "0",
              "@name": "OrbitParameters",
              "@type": "OrbitParameters"
            },
            {
              "@name": "GranuleSpatialRepresentation",
              "@type": "GranuleSpatialRepresentation",
              "xs:annotation": {
                "xs:documentation": null
              }
            }
          ]
        }
      },
      {
        "@name": "HorizontalSpatialDomain",
        "xs:annotation": {
          "xs:documentation": "This entity holds collection horizontal\n      spatial coverage data."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "ZoneIdentifier",
              "xs:annotation": {
                "xs:documentation": "The appropriate numeric or alpha code\n          used to identify the various zones in this grid\n          coordinate system."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@name": "Geometry",
              "@type": "Geometry"
            }
          ]
        }
      },
      {
        "@name": "Geometry",
        "xs:sequence": {
          "xs:element": {
            "@name": "CoordinateSystem",
            "@type": "CoordinateSystem"
          },
          "xs:choice": {
            "@maxOccurs": "unbounded",
            "xs:element": [
              {
                "@name": "Point",
                "@type": "Point"
              },
              {
                "@name": "BoundingRectangle",
                "@type": "BoundingRectangle"
              },
              {
                "@name": "GPolygon",
                "@type": "GPolygon"
              },
              {
                "@name": "Line",
                "@type": "Line"
              }
            ]
          }
        }
      },
      {
        "@name": "OrbitParameters",
        "xs:annotation": {
          "xs:documentation": "Orbit parameters for the collection used by\n      the Orbital Backtrack Algorithm."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "SwathWidth",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "Width of the swath at the equator in\n          Kilometers."
              }
            },
            {
              "@name": "Period",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "Orbital period in decimal\n          minutes."
              }
            },
            {
              "@name": "InclinationAngle",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "Inclination of the orbit. This is the\n          same as (180-declination) and also the same as the\n          highest latitude achieved by the satellite. Data Unit:\n          Degree."
              }
            },
            {
              "@name": "NumberOfOrbits",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "Indicates the number of\n          orbits."
              }
            },
            {
              "@name": "StartCircularLatitude",
              "@type": "xs:decimal",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "The latitude start of the orbit\n          relative to the equator. This is used by the backtrack\n          search algorithm to treat the orbit as if it starts from\n          the specified latitude. This is optional and will default\n          to 0 if not specified."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfContacts",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Contact",
            "@type": "Contact"
          }
        }
      },
      {
        "@name": "Contact",
        "xs:annotation": {
          "xs:documentation": "This entity contains the basic\n      characteristics for a person or an organization type of\n      contact. These contacts may provide information about a\n      Collection, Delivered Algorithm Package, PGE or Data\n      Originator. System and user profile contact information is\n      held elsewhere."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Role",
              "xs:annotation": {
                "xs:documentation": "The role of the contact (producer,\n          archiver, distributor or data\n          originator)."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "HoursOfService",
              "xs:annotation": {
                "xs:documentation": "Time period when individuals can speak\n          to the organization or individuals."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "1024"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "Instructions",
              "xs:annotation": {
                "xs:documentation": "Supplemental instructions on how or\n          when to contact the individual or\n          organization."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "OrganizationName",
              "xs:annotation": {
                "xs:documentation": "The organization and the member of the\n          organization, associated with the data set. Used in cases\n          where the association of the organization to the data set\n          is more significant than the association of the person to\n          the data set."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "200"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "OrganizationAddresses",
              "@type": "ListOfAddresses",
              "xs:annotation": {
                "xs:documentation": "This entity contains the address\n          details for each contact."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "OrganizationPhones",
              "@type": "ListOfPhones"
            },
            {
              "@minOccurs": "0",
              "@name": "OrganizationEmails",
              "@type": "ListOfEmails"
            },
            {
              "@minOccurs": "0",
              "@name": "ContactPersons",
              "@type": "ListOfContactPersons"
            }
          ]
        }
      },
      {
        "@name": "ListOfEmails",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Email",
            "xs:annotation": {
              "xs:documentation": "The address of the electronic mailbox\n          of the organization or individual."
            },
            "xs:simpleType": {
              "xs:restriction": {
                "@base": "xs:string",
                "xs:maxLength": {
                  "@value": "1024"
                },
                "xs:minLength": {
                  "@value": "1"
                }
              }
            }
          }
        }
      },
      {
        "@name": "ListOfAddresses",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Address",
            "@type": "Address"
          }
        }
      },
      {
        "@name": "Address",
        "xs:annotation": {
          "xs:documentation": "This entity contains the address details\n      for each contact."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "StreetAddress",
              "xs:annotation": {
                "xs:documentation": "An address line for the address, used\n          for mailing or physical addresses of organizations or\n          individuals who serve as points of\n          contact."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "1024"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "City",
              "xs:annotation": {
                "xs:documentation": "The city of the person or\n          organization."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "80"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "StateProvince",
              "xs:annotation": {
                "xs:documentation": "The state or province of the\n          address."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "30"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "PostalCode",
              "xs:annotation": {
                "xs:documentation": "The zip or other postal code of the\n          address."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "20"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "Country",
              "xs:annotation": {
                "xs:documentation": "The country of the\n          address."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "10"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfPhones",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Phone",
            "@type": "Phone"
          }
        }
      },
      {
        "@name": "Phone",
        "xs:annotation": {
          "xs:documentation": "This entity contains the telephone details\n      associated with the contact."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Number",
              "xs:annotation": {
                "xs:documentation": "Number of the organization or\n          individual who is point of contact. The general format of\n          the number includes country, area, and STD codes, as\n          required for the full telephone number. Multi-extensions\n          should be single entries rather than part of a single\n          entry text."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "23"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@name": "Type",
              "xs:annotation": {
                "xs:documentation": "The type of telephone number being\n          provided in this instance of the phone number, in order\n          to reach the organization or individual who serves as a\n          point of contact."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "30"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfContactPersons",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "ContactPerson",
            "@type": "ContactPerson"
          }
        }
      },
      {
        "@name": "ContactPerson",
        "xs:annotation": {
          "xs:documentation": "This entity contains the contact person's\n      name and position. In some instances, Contact Person is the\n      primary point of contact."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "FirstName",
              "xs:annotation": {
                "xs:documentation": "First name of the individual which the\n          contact role (producer, archiver, distributor, or data\n          originator) applies. People are points of contact, rather\n          than organizations, in cases where the association of the\n          person to the data set is more significant than the\n          association of the organization to the data set. They may\n          also be included if both a single person and organization\n          are provided as points of contact."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "255"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "MiddleName",
              "xs:annotation": {
                "xs:documentation": "Middle name of the individual which the\n          contact role (producer, archiver, distributor, or data\n          originator) applies."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "255"
                  }
                }
              }
            },
            {
              "@name": "LastName",
              "xs:annotation": {
                "xs:documentation": "Last name of the individual which the\n          contact role (producer, archiver, distributor, or data\n          originator) applies."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:maxLength": {
                    "@value": "255"
                  },
                  "xs:minLength": {
                    "@value": "1"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "JobPosition",
              "xs:annotation": {
                "xs:documentation": "The title of the individual, i.e. Team\n          Leader, Principal Investigator."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "255"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "VerticalCoordinateSystem",
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "AltitudeSystemDefinition",
              "@type": "VerticalSystemDefinition",
              "@minOccurs": "0"
            },
            {
              "@name": "DepthSystemDefinition",
              "@type": "VerticalSystemDefinition",
              "@minOccurs": "0"
            }
          ]
        }
      },
      {
        "@name": "VerticalSystemDefinition",
        "xs:annotation": {
          "xs:documentation": "The reference frame or system from which\n      altitude or depths are measured. The term 'altitude' is used\n      instead of the common term 'elevation' to conform to the\n      terminology in Federal Information Processing Standards 70-1\n      and 173. The information contains the datum name, distance\n      units and encoding method, which provide the definition for\n      the system."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "DatumName",
              "xs:annotation": {
                "xs:documentation": "The identification given to the level\n          surface taken as the surface of reference from which\n          measurements are compared."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "DistanceUnits",
              "xs:annotation": {
                "xs:documentation": "The recorded units"
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "EncodingMethod",
              "xs:annotation": {
                "xs:documentation": "The means used to encode\n          measurements."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "Resolutions",
              "@type": "ListOfResolutions",
              "xs:annotation": {
                "xs:documentation": "This entity stores a list of\n          resolutions."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfResolutions",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "Resolution",
            "@type": "xs:decimal",
            "xs:annotation": {
              "xs:documentation": "This entity stores the minimum distance\n          possible between two adjacent values, expressed in\n          distance units of measure for\n          collection."
            }
          }
        }
      },
      {
        "@name": "HorizontalCoordinateSystem",
        "xs:sequence": {
          "xs:element": {
            "@name": "GeodeticModel",
            "@type": "GeodeticModel",
            "@minOccurs": "0"
          },
          "xs:choice": {
            "@minOccurs": "0",
            "xs:element": [
              {
                "@name": "GeographicCoordinateSystem",
                "@type": "GeographicCoordinateSystem"
              },
              {
                "@name": "PlanarCoordinateSystems",
                "@type": "ListOfPlanarCoordinateSystems"
              },
              {
                "@name": "LocalCoordinateSystem",
                "@type": "LocalCoordinateSystem"
              }
            ]
          }
        }
      },
      {
        "@name": "GeodeticModel",
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "HorizontalDatumName",
              "xs:annotation": {
                "xs:documentation": "The identification given to the\n          reference system used for defining the coordinates of\n          points."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "EllipsoidName",
              "xs:annotation": {
                "xs:documentation": "Identification given to established\n          representation of the Earth's shape."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "255"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "SemiMajorAxis",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "Radius of the equatorial axis of the\n          ellipsoid."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "DenominatorOfFlatteningRatio",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "The ratios of the Earth's major axis to\n          the difference between the major and the\n          minor."
              }
            }
          ]
        }
      },
      {
        "@name": "GeographicCoordinateSystem",
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "GeographicCoordinateUnits",
              "xs:annotation": {
                "xs:documentation": "Units of measure used for the geodetic\n          latitude and longitude resolution values. For lat, a 2\n          digit decimal number from 0-90; for lon, a 3 digit\n          decimal number from 0-180. + or absence of - for values\n          north of equator or values west of prime meridian; - for\n          all others."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "LatitudeResolution",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "The minimum difference between two\n          adjacent latitude values expressed in Geographic\n          Coordinate Units of measure."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "LongitudeResolution",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "The minimum difference between two\n          adjacent longitude values expressed in Geographic\n          Coordinate Units of measure."
              }
            }
          ]
        }
      },
      {
        "@name": "LocalCoordinateSystem",
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "Description",
              "xs:annotation": {
                "xs:documentation": "This class contains a description of\n          the coordinate system and geo-reference\n          information."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "GeoReferenceInformation",
              "xs:annotation": {
                "xs:documentation": "A description of the information\n          provided to register the local system to the Earth (e.g.\n          control points, satellite ephemeral data, and inertial\n          navigation data)."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "SpatialInfo",
        "xs:annotation": {
          "xs:documentation": "This entity stores the reference frame or\n      system from which altitudes (elevations) are measured. The\n      information contains the datum name, distance units and\n      encoding method, which provide the definition for the system.\n      This table also stores the characteristics of the reference\n      frame or system from which depths are measured. The\n      additional information in the table are geometry reference\n      data etc."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "SpatialCoverageType",
              "xs:annotation": {
                "xs:documentation": "This attribute denotes whether the\n          locality/coverage requires horizontal, vertical, or both\n          in the spatial domain and coordinate system\n          definitions."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@name": "VerticalCoordinateSystem",
              "@type": "VerticalCoordinateSystem",
              "@minOccurs": "0"
            },
            {
              "@name": "HorizontalCoordinateSystem",
              "@type": "HorizontalCoordinateSystem",
              "@minOccurs": "0"
            }
          ]
        }
      },
      {
        "@name": "ListOfPlanarCoordinateSystems",
        "xs:sequence": {
          "xs:element": {
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "@name": "PlanarCoordinateSystem",
            "@type": "PlanarCoordinateSystem"
          }
        }
      },
      {
        "@name": "PlanarCoordinateInformation",
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "DistanceUnits",
              "xs:annotation": {
                "xs:documentation": "Units of measure used for planar\n          coordinate description distances."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "EncodingMethod",
              "xs:annotation": {
                "xs:documentation": "The means used to represent horizontal\n          positions in the planar coordinate\n          system."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            }
          ],
          "xs:choice": {
            "@minOccurs": "0",
            "xs:element": [
              {
                "@name": "DistanceAndBearingRepresentation",
                "@type": "DistanceAndBearingRepresentation"
              },
              {
                "@name": "CoordinateRepresentation",
                "@type": "CoordinateRepresentation"
              }
            ]
          }
        }
      },
      {
        "@name": "DistanceAndBearingRepresentation",
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "DistanceResolution",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "The minimum distance measurable between\n          two points, expressed in Planar Distance Units of\n          measure."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "BearingResolution",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "The minimum angle measurable between\n          two points, expressed in Bearing Units of\n          measure."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "BearingUnits",
              "xs:annotation": {
                "xs:documentation": "Units of measure used for\n          angles."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "255"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "BearingReferenceDirection",
              "xs:annotation": {
                "xs:documentation": "Direction from which the bearing is\n          measured clockwise."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "20"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "BearingReferenceMeridian",
              "xs:annotation": {
                "xs:documentation": "Axis from which the bearing is\n          measured."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "2048"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "CoordinateRepresentation",
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "AbscissaResolution",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "The (nominal) minimum distance between\n          the 'x' or column values of two adjacent points,\n          expressed in Planar Distance Units of measure. Planar\n          Distance Units of measure are units used for distances\n          whose domain values are meters, international feet, and\n          survey feet."
              }
            },
            {
              "@minOccurs": "0",
              "@name": "OrdinateResolution",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "The (nominal) minimum distance between\n          the 'y' or row values of two adjacent points, expressed\n          in Planar Distance Units of measure. Planar Distance\n          Units of measure are units for distances whose domain\n          values are meters, international feet, and survey\n          feet."
              }
            }
          ]
        }
      },
      {
        "@name": "MapProjection",
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "MapProjectionName",
              "xs:annotation": {
                "xs:documentation": "The name of the systematic\n          representation of all or part of the surface of the Earth\n          on a plane or developable surface."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@minOccurs": "0",
              "@name": "MapProjectionPointer",
              "xs:annotation": {
                "xs:documentation": "This is a data modeling logical\n          reference to a map projection."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "255"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "PlanarCoordinateSystem",
        "xs:annotation": {
          "xs:documentation": "This entity stores collections' coordinate\n      system reference information include description of the\n      system and geo-reference information, the name of the map\n      projection [the systematic representation of all or part of\n      the surface of the Earth on a plane or developable surface],\n      a logical pointer to the map projection details, the\n      description of the coordinate system and geo-reference\n      information, and the resolutions units, direction, and\n      meridian for the planar coordinate system\n      etc."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "PlanarCoordinateSystemId",
              "xs:annotation": {
                "xs:documentation": "The reference ID of the planar\n          coordinate system. This ID is unique per data\n          provider."
              },
              "xs:simpleType": {
                "xs:restriction": {
                  "@base": "xs:string",
                  "xs:minLength": {
                    "@value": "1"
                  },
                  "xs:maxLength": {
                    "@value": "80"
                  }
                }
              }
            },
            {
              "@name": "PlanarCoordinateInformation",
              "@type": "PlanarCoordinateInformation",
              "@minOccurs": "0"
            }
          ],
          "xs:choice": {
            "@minOccurs": "0",
            "xs:element": [
              {
                "@name": "MapProjection",
                "@type": "MapProjection"
              },
              {
                "@name": "LocalPlanarCoordinateSystem",
                "@type": "LocalCoordinateSystem"
              },
              {
                "@minOccurs": "0",
                "@name": "GridCoordinateSystemName",
                "xs:annotation": {
                  "xs:documentation": "This attribute contains the name of\n            the grid coordinate system."
                },
                "xs:simpleType": {
                  "xs:restriction": {
                    "@base": "xs:string",
                    "xs:minLength": {
                      "@value": "1"
                    },
                    "xs:maxLength": {
                      "@value": "255"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      {
        "@name": "ListOfCollectionAddFields",
        "xs:annotation": {
          "xs:documentation": "A list of fields that can be updated on a\n      collection."
        },
        "xs:sequence": {
          "xs:element": {
            "@name": "Field",
            "@type": "CollectionAddField",
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "xs:annotation": {
              "xs:documentation": "A single field to be\n          updated."
            }
          }
        }
      },
      {
        "@name": "CollectionAddField",
        "xs:annotation": {
          "xs:documentation": "A field to be updated in a collection. Not\n      all fields of a collection support partial updates. If an\n      update is required for a non-supported field, perform a\n      complete collection replacement rather than a partial\n      metadata update."
        },
        "xs:choice": {
          "xs:choice": {
            "xs:element": [
              {
                "@name": "BrowseImage",
                "@type": "ProviderBrowseId",
                "xs:annotation": {
                  "xs:documentation": "Adds a link to the browse image with\n            the specified ProviderBrowseId."
                }
              },
              {
                "@name": "BrowseImageUrl",
                "@type": "ProviderBrowseUrl",
                "xs:annotation": {
                  "xs:documentation": "Adds a link to the browse image with\n            the specified ProviderBrowseUrl."
                }
              }
            ]
          },
          "xs:element": [
            {
              "@name": "Visible",
              "@type": "xs:boolean",
              "xs:annotation": {
                "xs:documentation": "Updates the visible flag of the\n          collection. Refer to the Collection documentation for\n          more information."
              }
            },
            {
              "@name": "Temporal",
              "@type": "Temporal",
              "xs:annotation": {
                "xs:documentation": "Updates the temporal information for\n          the collection. The entire temporal information will be\n          replaced during an add. Refer to the Collection\n          documentation for more information."
              }
            },
            {
              "@name": "DeleteTime",
              "@type": "xs:dateTime",
              "xs:annotation": {
                "xs:documentation": "Updates the delete time of the\n          collection. Refer to the Collection documentation for\n          more information."
              }
            },
            {
              "@name": "RestrictionFlag",
              "@type": "xs:decimal",
              "xs:annotation": {
                "xs:documentation": "Updates the restriction flag of the\n          collection. Refer to the Collection documentation for\n          more information."
              }
            },
            {
              "@name": "Spatial",
              "@type": "Spatial",
              "xs:annotation": {
                "xs:documentation": "Updates the spatial coverage for the\n          collection. The entire spatial coverage will be replaced\n          during an add. Refer to the Collection documentation for\n          more information."
              }
            },
            {
              "@name": "ScienceKeyword",
              "@type": "ScienceKeyword",
              "xs:annotation": {
                "xs:documentation": "Adds a science keyword to a collection.\n          Duplicate science keywords are allowed in a collection.\n          Refer to the Collection documentation for more\n          information."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfCollectionDeleteFields",
        "xs:annotation": {
          "xs:documentation": "A list of fields to be deleted from a\n      collection."
        },
        "xs:sequence": {
          "xs:element": {
            "@name": "Field",
            "@type": "CollectionDeleteField",
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "xs:annotation": {
              "xs:documentation": "A single field to be deleted from a\n          collection."
            }
          }
        }
      },
      {
        "@name": "CollectionDeleteField",
        "xs:annotation": {
          "xs:documentation": "The field that should be deleted. Some\n      fields require a value to indicate the key of the field to\n      the correct instance can be identified."
        },
        "xs:choice": {
          "xs:element": [
            {
              "@name": "BrowseImage",
              "@type": "ProviderBrowseId",
              "xs:annotation": {
                "xs:documentation": "Deletes a link to the browse image with\n          the specified ProviderBrowseId."
              }
            },
            {
              "@name": "AllBrowseImages",
              "@type": "EmptyType",
              "xs:annotation": {
                "xs:documentation": "Indicates that all links to browse\n          images should be deleted from the\n          collections."
              }
            },
            {
              "@name": "Temporal",
              "@type": "EmptyType",
              "xs:annotation": {
                "xs:documentation": "Deletes the temporal information from\n          the collection."
              }
            },
            {
              "@name": "DeleteTime",
              "@type": "EmptyType",
              "xs:annotation": {
                "xs:documentation": "Deletes the remove time from the\n          collection. The collection will no longer be\n          automatically removed."
              }
            },
            {
              "@name": "RestrictionFlag",
              "@type": "EmptyType",
              "xs:annotation": {
                "xs:documentation": "Deletes the restriction flag from the\n          collection."
              }
            },
            {
              "@name": "Spatial",
              "@type": "EmptyType",
              "xs:annotation": {
                "xs:documentation": "Deletes the spatial coverage from the\n          collection."
              }
            },
            {
              "@name": "ScienceKeyword",
              "@type": "ScienceKeyword",
              "xs:annotation": {
                "xs:documentation": "Deletes all instances of given science\n          keyword from the collection, the given science keyword\n          must exactly match one or more science keyword from the\n          collection is order for the partial delete to be\n          successful. All matching instances of the given science\n          keyword will be deleted from the collection. A matching\n          science keyword case-insensitively matches all fields\n          from a collection science keyword."
              }
            }
          ]
        }
      },
      {
        "@name": "CollectionPartialAdd",
        "xs:annotation": {
          "xs:documentation": "A partial add to be applied to a\n      collection. The partial add may contain one or more fields.\n      If the field being added contains a unique key and the field\n      already exists, it will be updated or replaced, otherwise it\n      will be added. Refer to the individual field documentation\n      for details."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Targets",
              "@type": "ListOfCollectionUpdateTargets",
              "xs:annotation": {
                "xs:documentation": "A reference to the collections to be\n          updated."
              }
            },
            {
              "@name": "Fields",
              "@type": "ListOfCollectionAddFields",
              "xs:annotation": {
                "xs:documentation": "The fields that should be added to the\n          referenced collection. If the field already exists in the\n          collection, it will be updated or\n          replaced."
              }
            }
          ]
        }
      },
      {
        "@name": "CollectionPartialDelete",
        "xs:annotation": {
          "xs:documentation": "A partial delete to be applied to a\n      collection. The partial may contain one or more fields. If a\n      delete is attempted the value will be set to a default value.\n      Refer to the individual field documentation for\n      details."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "Targets",
              "@type": "ListOfCollectionUpdateTargets",
              "xs:annotation": {
                "xs:documentation": "A reference to the collections to be\n          updated."
              }
            },
            {
              "@name": "Fields",
              "@type": "ListOfCollectionDeleteFields",
              "xs:annotation": {
                "xs:documentation": "The fields that should be deleted from\n          the collection."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfCollectionPartialAdds",
        "xs:annotation": {
          "xs:documentation": "A list of collection partial metadata\n      adds."
        },
        "xs:sequence": {
          "xs:element": {
            "@name": "CollectionPartialAdd",
            "@type": "CollectionPartialAdd",
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "xs:annotation": {
              "xs:documentation": "A single collection partial metadata\n          add."
            }
          }
        }
      },
      {
        "@name": "ListOfCollectionPartialDeletes",
        "xs:annotation": {
          "xs:documentation": "A list of collection partial metadata\n      deletes."
        },
        "xs:sequence": {
          "xs:element": {
            "@name": "CollectionPartialDelete",
            "@type": "CollectionPartialDelete",
            "@minOccurs": "0",
            "@maxOccurs": "unbounded",
            "xs:annotation": {
              "xs:documentation": "A single collection partial metadata\n          delete."
            }
          }
        }
      },
      {
        "@name": "CollectionUpdateTarget",
        "xs:annotation": {
          "xs:documentation": "A reference to a collection to be\n      updated."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "LastUpdate",
              "@type": "xs:dateTime",
              "@minOccurs": "0",
              "xs:annotation": {
                "xs:documentation": "The date this change occured in the\n          provider's database. If this is provided we will validate\n          that this date is greater than or equal to the date in\n          the collection. The collection's last update data will be\n          updated with this value."
              }
            },
            {
              "@name": "Collection",
              "@type": "CollectionRef",
              "xs:annotation": {
                "xs:documentation": "The collection reference to be\n          updated."
              }
            }
          ]
        }
      },
      {
        "@name": "ListOfCollectionUpdateTargets",
        "xs:annotation": {
          "xs:documentation": "A list of collections to be\n      updated."
        },
        "xs:sequence": {
          "xs:element": {
            "@name": "Target",
            "@type": "CollectionUpdateTarget",
            "@maxOccurs": "unbounded",
            "@minOccurs": "1"
          }
        }
      }
    ],
    "xs:simpleType": [
      {
        "@name": "DurationUnit",
        "xs:annotation": {
          "xs:documentation": "This entity indicates the periodic duration\n      units."
        },
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "DAY"
            },
            {
              "@value": "MONTH"
            },
            {
              "@value": "YEAR"
            }
          ]
        }
      },
      {
        "@name": "DataType",
        "xs:annotation": {
          "xs:documentation": "This entity contains the additional\n      attribute data types."
        },
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "STRING",
              "xs:annotation": {
                "xs:documentation": {
                  "a": {
                    "@href": "http://www.w3.org/TR/xmlschema-2/#string",
                    "#text": "the\n          XML Schema specification"
                  },
                  "#text": "The parameter value type is XML\n          primitive string type. See\n          for more\n          information."
                }
              }
            },
            {
              "@value": "FLOAT",
              "xs:annotation": {
                "xs:documentation": {
                  "a": {
                    "@href": "http://www.w3.org/TR/xmlschema-2/#float",
                    "#text": "the XML\n          Schema specification"
                  },
                  "#text": "The parameter value type is XML\n          primitive float type, without support for positive or\n          negative infinity, or not-a-number. See\n          for more\n          information."
                }
              }
            },
            {
              "@value": "INT",
              "xs:annotation": {
                "xs:documentation": {
                  "a": {
                    "@href": "http://www.w3.org/TR/xmlschema-2/#int",
                    "#text": "the XML\n          Schema specification"
                  },
                  "#text": "The parameter value type is XML derived\n          int type. See\n          for more\n          information."
                }
              }
            },
            {
              "@value": "BOOLEAN",
              "xs:annotation": {
                "xs:documentation": {
                  "a": {
                    "@href": "http://www.w3.org/TR/xmlschema-2/#boolean",
                    "#text": "the\n          XML Schema specification"
                  },
                  "#text": "The parameter value type is XML\n          primitive boolean type. See\n          for more\n          information."
                }
              }
            },
            {
              "@value": "DATE",
              "xs:annotation": {
                "xs:documentation": {
                  "a": {
                    "@href": "http://www.w3.org/TR/xmlschema-2/#date",
                    "#text": "the XML\n          Schema specification"
                  },
                  "#text": "The parameter value type is XML\n          primitive date type but with GMT timezone, meaning any\n          timezoned or non-timezoned value will be treated as\n          having GMT timezone. See\n          for more\n          information."
                }
              }
            },
            {
              "@value": "TIME",
              "xs:annotation": {
                "xs:documentation": {
                  "a": {
                    "@href": "http://www.w3.org/TR/xmlschema-2/#time",
                    "#text": "the XML\n          Schema specification"
                  },
                  "#text": "The parameter value type is XML\n          primitive time type but with GMT timezone, meaning any\n          timezoned or non-timezoned value will be treated as\n          having GMT timezone. See\n          for more\n          information."
                }
              }
            },
            {
              "@value": "DATETIME",
              "xs:annotation": {
                "xs:documentation": {
                  "a": {
                    "@href": "http://www.w3.org/TR/xmlschema-2/#dateTime",
                    "#text": "the\n          XML Schema specification"
                  },
                  "#text": "The parameter value type is XML\n          primitive dateTime type. See\n          for more\n          information."
                }
              }
            },
            {
              "@value": "DATE_STRING",
              "xs:annotation": {
                "xs:documentation": "The parameter value type is a string\n          that follows a provider-defined date\n          format."
              }
            },
            {
              "@value": "TIME_STRING",
              "xs:annotation": {
                "xs:documentation": "The parameter value type is a string\n          that follows a provider-defined time\n          format."
              }
            },
            {
              "@value": "DATETIME_STRING",
              "xs:annotation": {
                "xs:documentation": "The parameter value type is a string\n          that follows a provider-defined dateTime\n          format."
              }
            }
          ]
        }
      }
    ]
  }
}
